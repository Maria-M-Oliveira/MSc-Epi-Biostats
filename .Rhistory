### Libraries
library(tidyverse)
library(ggplot2)
library(readxl)
install.
install.packages("haven")
library(haven)
### Files
asma <- read_xlsx("Asma_GDH.xlsx")
View(asma)
### Data validation
# To validate data, i must look for missing and impossible values, as well as outliers
# I such, I wanna generate a frequency table for the different available variables
count(asma)
library(freqtables)
### Data validation
# To validate data, i must look for missing and impossible values, as well as outliers
# I such, I wanna generate a frequency table for the different available variables
freq_table(asma)
?freq_table
install.packages("finalfit")
library(finalfit)
### Data validation
# To validate data, i must look for missing and impossible values, as well as outliers
asma %>%
missing_plot()
?missing_plot
install.packages("naniar")
library(naniar)
n_miss(asma)
miss_var_summary(asma)
View(asma)
View(asma)
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`)
intern_days_box_plot <- boxplot(asma$`Dias de internamento`)
procedure_box_plot <- boxplot(asma$`Numero de Procedimentos`)
### Variable transformation from quantitative continuous to binary
# I need to transform a continuous variable (age) to a binary one (0-Below Median; 1-Above Median)
median_age <- median(asma$`Idade (anos)`)
asma %>%
mutate(age_bin = ifelse(age>median_age,1,0))
asma %>%
mutate(age_bin = ifelse(`Idade (anos)`>median_age,1,0))
View(asma)
asma %>%
mutate(age_bin = ifelse(`Idade (anos)`>median_age,1,0))
asma <- asma %>%
mutate(age_bin = ifelse(`Idade (anos)`>median_age,1,0))
View(asma)
### Univariate analysis of chosen variables
freq_NUTS <- freq_table(asma$`NUTS III`)
### Univariate analysis of chosen variables
freq_NUTS <- freq_table(asma, `NUTS III`)
View(freq_NUTS)
freq_Dx <- freq_table(asma,`Diagnóstico (GCD)`)
View(freq_Dx)
bar_NUTS <- ggplot() + geom_bar(freq_NUTS)
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, aes(cat, n))
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, mapping(aes=(cat, n))
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, mapping(aes=(c(cat, n))
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, aes(x=cat))
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, aes(x=cat))
?geom_bar
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, mapping=aes(x=cat))
bar_NUTS
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, mapping=aes(x=cat, y=n))
bar_NUTS
bar_NUTS <- ggplot() + geom_bar(freq_NUTS, mapping=aes(cat,n))
bar_NUTS
bar_NUTS <- ggplot() +
geom_bar(asma, mapping=aes(`NUTS III`))
bar_NUTS
bar_dx <- ggplot() +
geom_bar(asma, mapping=aes(`Diagnóstico (GCD)`))
bar_dx
View(freq_Dx)
procedure_sum <- summary(asma$`Numero de Procedimentos`)
procedure_sum
sd_procedure <- sd(asma$`Numero de Procedimentos`)
var_proceures <- (sd_procedure)^2
hist_procedure <- hist(asma$`Numero de Procedimentos`)
?hist
hist_procedure <- hist(asma$`Numero de Procedimentos`, breaks=1)
hist_procedure <- hist(asma$`Numero de Procedimentos`, breaks=90)
hist_procedure <- hist(asma$`Numero de Procedimentos`, breaks=50)
hist_procedure <- hist(asma$`Numero de Procedimentos`, breaks=50, include.lowest = TRUE)
hist_procedure <- hist(asma$`Numero de Procedimentos`, breaks=50, right=F)
age_sum <- summary(asma$`Idade (anos)`)
sd_age <- sd(asma$`Idade (anos)`)
var_age <- (sd_age)^2
hist_age <- hist(asma$`Idade (anos)`, breaks=40, right=F)
hist_age <- hist(asma$`Idade (anos)`, breaks=50, right=F)
hist_age <- hist(asma$`Idade (anos)`, breaks=90, right=F)
library(pollster)
install.packages("pollster")
library(pollster)
### Bivariate analysis (quantixquali, quantixquanti)
#Quali x Quali --> Districts X Episode Type
crosstab(asma, Distrito,`Tipo Episodio`)
### Bivariate analysis (quantixquali, quantixquanti)
#Quali x Quali --> Districts X Episode Type
crosstab(asma, asma$Distrito, asma$`Tipo Episodio`)
### Bivariate analysis (quantixquali, quantixquanti)
#Quali x Quali --> Districts X Episode Type
crosstab(asma, x=Distrito, y=`Tipo Episodio`)
### Bivariate analysis (quantixquali, quantixquanti)
#Quali x Quali --> Districts X Episode Type
crosstab(df=asma, x=Distrito, y=`Tipo Episodio`)
### Bivariate analysis (quantixquali, quantixquanti)
#Quali x Quali --> Districts X Episode Type
crosstab(df=asma, x=Distrito, y=`Tipo Episodio`) %>%
kable()
?crosstab
### Bivariate analysis (quantixquali, quantixquanti)
#Quali x Quali --> Districts X Episode Type
crosstab(df=asma, x=Distrito, y=`Tipo Episodio`, weight = weight)
### Bivariate analysis
#Quali x Quali --> Districts X Episode Type
crosstab <- table(asma$Distrito, asma$`Tipo Episodio`)
crosstab
library(stats)
xtabs(~asma$Distrito + asma$`Tipo Episodio`)
### Bivariate analysis
#Quali x Quali --> Districts X Episode Type
corss_dist_epi <- xtabs(~asma$Distrito + asma$`Tipo Episodio`)
### Bivariate analysis
#Quali x Quali --> Districts X Episode Type
cross_dist_epi <- xtabs(~asma$Distrito + asma$`Tipo Episodio`)
cross_dist_epi
#Quanti x Quali
# Type of asthma dx and age
summary_asth_age <- asma %>%
group_by(`Tipo diagnostico Asma`) %>%
summarize(mean = mean(`Idade (anos)`),
median = median(`Idade (anos)`),
min = min(`Idade (anos)`),
max = max(`Idade (anos)`),
stdev = sd(`Idade (anos)`),
var = stdev^2,
)
summary_asth_age
View(summary_asth_age)
install.packages("moments")
library(moments)
#Quanti x Quali
# Type of asthma dx and age
summary_asth_age <- asma %>%
group_by(`Tipo diagnostico Asma`) %>%
summarize(mean = mean(`Idade (anos)`),
median = median(`Idade (anos)`),
min = min(`Idade (anos)`),
max = max(`Idade (anos)`),
stdev = sd(`Idade (anos)`),
var = stdev^2,
kurt= kurtosis(`Idade (anos)`),
skew = skewness(`Idade (anos)`))
summary_asth_age
#Quanti x Quali
# Type of asthma dx and age
summary_asth_age <- asma %>%
group_by(`Tipo diagnostico Asma`) %>%
summarize(mean = mean(`Idade (anos)`),
median = median(`Idade (anos)`),
min = min(`Idade (anos)`),
max = max(`Idade (anos)`),
stdev = sd(`Idade (anos)`),
var = stdev^2,
kurt= kurtosis(`Idade (anos)`),
skew = skewness(`Idade (anos)`),
interquart = IQR(`Idade (anos)`))
summary_asth_age
#Quanti x Quanti
# No of procedures and intensive care days
plot(asma$`Numero de Procedimentos`, asma$`Dias de internamento`)
correlation <- cor(asma$`Numero de Procedimentos`, asma$`Dias de internamento`)
correlation
cor.test(asma$`Numero de Procedimentos`, asma$`Dias de internamento`)
correlation <- cor.test(asma$`Numero de Procedimentos`, asma$`Dias de internamento`)
