mutate(diff = Médicos - Enfermeiros)
View(BD)
BD %>% select(Enfermeiros) %>%
summarise(n = n(),
mean = mean(Enfermeiros, na.rm = TRUE),
sd = sd(Enfermeiros, na.rm = TRUE),
stderr = sd/sqrt(n),
LCL = mean - qt(1 - (0.05 / 2), n - 1) * stderr,
UCL = mean + qt(1 - (0.05 / 2), n - 1) * stderr,
median=median(Enfermeiros, na.rm = TRUE),
min=min(Enfermeiros, na.rm = TRUE),
max=max(Enfermeiros, na.rm = TRUE),
IQR=IQR(Enfermeiros, na.rm = TRUE))
shapiro.test(BD$diff)
BD %>%
mutate(diff = Médicos - Enfermeiros)
BD <- BD %>%
mutate(diff = Médicos - Enfermeiros)
shapiro.test(BD$diff)
ggplot(data = BD, mapping = aes(sample = diff)) +
stat_qq_band(alpha=0.25, conf=0.95, qtype=1, bandType = "boot", B=5000, fill="red") +
stat_qq_line(identity=TRUE) +
stat_qq_point(col="black") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") + theme_bw()
# Boxplot of diff
ggplot(BD, aes(x = "", y = diff)) +
stat_boxplot(geom ="errorbar", width = 0.5) +
geom_boxplot(fill = "light blue") +
stat_summary(fun.y=mean, geom="point", shape=10, size=3.5, color="black") +
ggtitle("Boxplot of day 3 - day 1 differences") +
theme_bw() + theme(legend.position="none")
# Boxplot of diff
ggplot(BD, aes(x = "", y = diff)) +
stat_boxplot(geom ="errorbar", width = 0.5) +
geom_boxplot(fill = "light blue") +
stat_summary(fun.y=mean, geom="point", shape=10, size=3.5, color="black") +
ggtitle("Boxplot of doctors - nurses differences") +
theme_bw() + theme(legend.position="none")
# Since we rejected normality, we must perform a non parametric test: wilcoxon
wilcox <- wilcox.test(Médicos ~Enfermeiros, data=BD,na.rm=TRUE, paired=TRUE, exact=FALSE, conf.int=TRUE)
# Since we rejected normality, we must perform a non parametric test: wilcoxon
wilcox <- wilcox.test(Médicos, Enfermeiros, data=BD,na.rm=TRUE, paired=TRUE, exact=FALSE, conf.int=TRUE)
# Since we rejected normality, we must perform a non parametric test: wilcoxon
wilcox <- wilcox.test(BD$Médicos, BD$Enfermeiros,na.rm=TRUE, paired=TRUE, exact=FALSE, conf.int=TRUE)
wilcox
######## Exercise 3
# comparar todas as regioes quanto ao numero de medicos
Med_BD <- BD %>%
select(Médicos, NUTS_II)
View(Med_BD)
ggplot(Med_BD, aes(x = NUTS_II, y = Médicos, fill = NUTS_II)) +
stat_boxplot(geom ="errorbar", width = 0.5) +
geom_boxplot(fill = "light blue") +
stat_summary(fun.y=mean, geom="point", shape=10, size=3.5, color="black") +
ggtitle("Boxplots of Lisbon and North Region Groups") +
theme_bw() + theme(legend.position="none")
#Produce descriptive statistics by group
Med_BD %>% select(Médicos, NUTS_II) %>% group_by(NUTS_II) %>%
summarise(n = n(),
mean = mean(Médicos, na.rm = TRUE),
sd = sd(Médicos, na.rm = TRUE),
stderr = sd/sqrt(n),
LCL = mean - qt(1 - (0.05 / 2), n - 1) * stderr,
UCL = mean + qt(1 - (0.05 / 2), n - 1) * stderr,
median=median(Médicos, na.rm = TRUE),
min=min(Médicos, na.rm = TRUE),
max=max(Médicos, na.rm = TRUE),
IQR=IQR(Médicos, na.rm = TRUE))
# QQ plots
ggplot(data = Med_BD, mapping = aes(sample = Médicos, color = NUTS_II, fill = NUTS_II)) +
stat_qq_band(alpha=0.5, conf=0.95, qtype=1, bandType = "ts") +
stat_qq_line(identity=TRUE) +
stat_qq_point(col="black") +
facet_wrap(~ NUTS_II, scales = "free") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") + theme_bw()
# Since we want to compare multiple groups, we want to perform an ANOVA test or Kruskall-Wallis
# First, we need to test for assumptions:
# Normal distribuition in each group, and homogeneity of variances
# Starting with Shapiro-Wilk to test for normality
Med_BD %>%
group_by(NUTS_II) %>%
summarise(`W Statistic` = shapiro.test(Médicos)$statistic,
`p-value` = shapiro.test(Médicos)$p.value)
# Before that, and for the sake of practice, lets test for homogeneity of variances
lev2<-leveneTest(Médicos ~ NUTS_II, data=Med_BD)
print(lev2)
?lm
# Movint on to the ANOVA test
m1<-lm(Médicos~ NUTS_II, data=Med_DB, contrasts = c("contr.sum", "contr.poly"))
# Movint on to the ANOVA test
m1<-lm(Médicos~ NUTS_II, data=Med_BD, contrasts = c("contr.sum", "contr.poly"))
Anova(m1, type=3)
library(emmeans)
install.packages("emmeans")
library(emmeans)
?Anova
#Compute expected marginal means post-hoc tests
posthocs<-emmeans(m1, pairwise ~ NUTS_II, adjust="tukey")
#Display post-hoc letter groupings
CLD(posthocs$emmeans, details=TRUE, sort=TRUE, alpha=0.05, Letters = letters, adjust="tukey")
install.packages("gmodels")
library(gmodels)
#Display post-hoc letter groupings
CLD(posthocs$emmeans, details=TRUE, sort=TRUE, alpha=0.05, Letters = letters, adjust="tukey")
#Display post-hoc letter groupings
cld(posthocs$emmeans, details=TRUE, sort=TRUE, alpha=0.05, Letters = letters, adjust="tukey")
install.packages("lsmeans")
library(lsmeans)
#Display post-hoc letter groupings
cld(posthocs$emmeans, details=TRUE, sort=TRUE, alpha=0.05, Letters = letters, adjust="tukey")
ggplot(emm, aes(treatment)) +
geom_line(aes(y = emmean, group = 1)) +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
geom_point(aes(y = emmean), size = 2, color = "blue") +
labs(x = "Treatment", y = "Estimated marginal mean",
title = "Estimated marginal means with 95% confidence intervals") +
theme_bw()
#Plot estimated marginal means
emm <- summary(posthocs)$emmeans
ggplot(emm, aes(treatment)) +
geom_line(aes(y = emmean, group = 1)) +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
geom_point(aes(y = emmean), size = 2, color = "blue") +
labs(x = "Treatment", y = "Estimated marginal mean",
title = "Estimated marginal means with 95% confidence intervals") +
theme_bw()
ggplot(emm, aes(NUTS_II)) +
geom_line(aes(y = emmean, group = 1)) +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
geom_point(aes(y = emmean), size = 2, color = "blue") +
labs(x = "Treatment", y = "Estimated marginal mean",
title = "Estimated marginal means with 95% confidence intervals") +
theme_bw()
#Plot contrasts
plot(posthocs$contrasts) +
geom_vline(xintercept = 0) +
theme_bw() +
labs(y = "Contrast",
x = "Estimated marginal mean difference",
title = "Estimated marginal mean differences with 95% confidence intervals")
posthocs
install.packages("DescTools", dependencies = TRUE)
install.packages("FSA", dependencies = TRUE)
install.packages("PMCMRplus", dependencies = TRUE)
library(DescTools)
library(DescTools)
library(FSA)
library(PMCMRplus)
m1<-kruskal.test(Médicos ~ NUTS_II, data=Med_BD)
print(m1)
#Dunn's Kruskal-Wallis post-hoc test
posthocs1<-dunnTest(Médicos ~ NUTS_II, data=Med_DB, method="holm")
print(posthocs1)
#Dwass, Steel, Critchlow, Fligner post-hoc test
posthocs2<-dscfAllPairsTest(Médicos ~ NUTS_II, data=dat)
print(posthocs2)
#Perform the Kruskal-Wallis test
m1<-kruskal.test(Médicos ~ NUTS_II, data=Med_BD)
print(m1)
#Dunn's Kruskal-Wallis post-hoc test
posthocs1<-dunnTest(Médicos ~ NUTS_II, data=Med_DB, method="holm")
#Dunn's Kruskal-Wallis post-hoc test
posthocs1<-dunnTest(Médicos ~ NUTS_II, data=Med_BD, method="holm")
print(posthocs1)
#Dwass, Steel, Critchlow, Fligner post-hoc test
posthocs2<-dscfAllPairsTest(Médicos ~ NUTS_II, data=Med_BD)
print(posthocs2)
print(m1)
library(tidyverse)
library(ggplot2)
library(foreign)
#Files
BD <- read.spss("BaseCovid_trabalho4.sav", to.data.frame = TRUE)
View(BD)
# Quiquadrado
cross_age_cases <- xtabs(~BD$total_cases_per_million_10_tercil+BD$median_age_2cat)
cross_age_cases
install.packages("DescTools")
library(DescTools)
df_cross <- as.table(cross_age_cases)
expected <- ExpFreq(df_cross)
View(expected)
# Every value is <5, so assumptions are met
qui <- chisq.test(BD$total_cases_per_million_10_tercil, BD$median_age_2cat)
qui
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(readxl)
library(freqtables)
library(naniar)
library(stats)
library(moments)
asma_miss_analysis <- miss_var_summary(asma) #Returns a tibble of missing values count and percent by variable
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(readxl)
library(freqtables)
library(naniar)
library(stats)
library(moments)
asma <- read_xlsx("Asma_GDH.xlsx")
asma_miss_analysis <- miss_var_summary(asma) #Returns a tibble of missing values count and percent by variable
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`) #No outliers or impossible values
intern_days_box_plot <- boxplot(asma$`Dias de internamento`) #Several outliers and some extreme points that could be indicative of impossible values
procedure_box_plot <- boxplot(asma$`Numero de Procedimentos`) #Several outliers and some extreme points that could be indicative of impossible values
miss_var_summary(asma) #Returns a tibble of missing values count and percent by variable
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`) #No outliers or impossible values
intern_days_box_plot <- boxplot(asma$`Dias de internamento`) #Several outliers and some extreme points that could be indicative of impossible values
procedure_box_plot <- boxplot(asma$`Numero de Procedimentos`) #Several outliers and some extreme points that could be indicative of impossible values
?boxplot
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`,
ylab="Idade (anos)",
main="Boxplot of Partcipant Ages",
col="blue") #No outliers or impossible values
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`,
ylab="Idade (anos)",
main="Boxplot of Partcipant Ages",
col="orange") #No outliers or impossible values
intern_days_box_plot <- boxplot(asma$`Dias de internamento`,
ylab="Hospitalization days",
main="Boxplot of hospitalization days",
col="yellow") #Several outliers and some extreme points that could be indicative of impossible values
procedure_box_plot <- boxplot(asma$`Numero de Procedimentos`,
ylab="Number of procedures",
main="Boxplot of number of procedures",
col="cyan") #Several outliers and some extreme points that could be indicative of impossible values
procedure_box_plot <- boxplot(asma$`Numero de Procedimentos`,
ylab="Number of procedures",
main="Boxplot of number of procedures",
col="cyan",
border="darkblue") #Several outliers and some extreme points that could be indicative of impossible values
miss_var_summary(asma) #Returns a tibble of missing values count and percent by variable
summarize(mean = mean(`Idade (anos)`),
median = median(`Idade (anos)`),
min = min(`Idade (anos)`),
max = max(`Idade (anos)`),
stdev = sd(`Idade (anos)`),
var = stdev^2,
kurt= kurtosis(`Idade (anos)`),
skew = skewness(`Idade (anos)`),
interquart = IQR(`Idade (anos)`))
asma %>% summarize(mean = mean(`Idade (anos)`),
median = median(`Idade (anos)`),
min = min(`Idade (anos)`),
max = max(`Idade (anos)`),
stdev = sd(`Idade (anos)`),
var = stdev^2,
kurt= kurtosis(`Idade (anos)`),
skew = skewness(`Idade (anos)`),
interquart = IQR(`Idade (anos)`))
asma %>% summarize(mean = mean(`Idade (anos)`),
median = median(`Idade (anos)`),
min = min(`Idade (anos)`),
max = max(`Idade (anos)`),
stdev = sd(`Idade (anos)`),
var = stdev^2,
kurt= kurtosis(`Idade (anos)`),
skew = skewness(`Idade (anos)`),
interquart = IQR(`Idade (anos)`))
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`,
ylab="Idade (anos)",
main="Boxplot of Partcipant Ages",
col="orange",
border="brown") #No outliers or impossible values
intern_days_box_plot <- boxplot(asma$`Dias de internamento`,
ylab="Hospitalization days",
main="Boxplot of hospitalization days",
col="yellow",
border="brown") #Several outliers and some extreme points that could be indicative of impossible values
procedure_box_plot <- boxplot(asma$`Numero de Procedimentos`,
ylab="Number of procedures",
main="Boxplot of number of procedures",
col="cyan",
border="darkblue") #Several outliers and some extreme points that could be indicative of impossible values
asma %>%
summarise(n = n(),
mean = mean(`Idade (anos)`, na.rm = TRUE),
sd = sd(`Idade (anos)`, na.rm = TRUE),
stderr = sd/sqrt(n),
LCL = mean - qt(1 - (0.05 / 2), n - 1) * stderr,
UCL = mean + qt(1 - (0.05 / 2), n - 1) * stderr,
median=median(`Idade (anos)`, na.rm = TRUE),
min=min(`Idade (anos)`, na.rm = TRUE),
max=max(`Idade (anos)`, na.rm = TRUE),
IQR=IQR(`Idade (anos)`, na.rm = TRUE),
kurt= kurtosis(`Idade (anos)`),
skew = skewness(`Idade (anos)`))
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`,
ylab="Idade (anos)",
main="Boxplot of Partcipant Ages",
col="orange",
border="brown") #No outliers or impossible values
intern_days_box_plot <- boxplot(asma$`Dias de internamento`,
ylab="Hospitalization days",
main="Boxplot of hospitalization days",
col="yellow",
border="brown") #Several outliers and some extreme points that could be indicative of impossible values
procedure_box_plot <- boxplot(asma$`Numero de Procedimentos`,
ylab="Number of procedures",
main="Boxplot of number of procedures",
col="cyan",
border="darkblue") #Several outliers and some extreme points that could be indicative of impossible values
asma %>%
summarise(n = n(),
mean = mean(`Idade (anos)`, na.rm = TRUE),
sd = sd(`Idade (anos)`, na.rm = TRUE),
stderr = sd/sqrt(n),
LCL = mean - qt(1 - (0.05 / 2), n - 1) * stderr,
UCL = mean + qt(1 - (0.05 / 2), n - 1) * stderr,
median=median(`Idade (anos)`, na.rm = TRUE),
min=min(`Idade (anos)`, na.rm = TRUE),
max=max(`Idade (anos)`, na.rm = TRUE),
IQR=IQR(`Idade (anos)`, na.rm = TRUE),
kurt= kurtosis(`Idade (anos)`),
skew = skewness(`Idade (anos)`))
#quantitativa variables: idade, dias internamento,num procedimentos
age_box_plot <- boxplot(asma$`Idade (anos)`,
ylab="Idade (anos)",
main="Boxplot of Partcipant Ages",
col="orange",
border="brown") #No outliers or impossible values
```
### Transform the variable "Idade (anos)" in a binary variable
(0 -- Abaixo da Mediana; 1 -- Acima da Mediana)
median_age <- median(asma$`Idade (anos)`)
asma <- asma %>%
mutate(age_bin = ifelse(`Idade (anos)`>median_age,1,0))
summary(asma$age_bin)
?geom_bar
bar_NUTS <- ggplot() +
geom_bar(asma, mapping=aes(fill=`NUTS III`))
bar_NUTS
bar_NUTS <- ggplot() +
geom_bar(asma, mapping=aes(`NUTS III`, fill=`NUTS III`))
bar_NUTS
bar_NUTS <- ggplot() +
geom_bar(asma, mapping=aes(`NUTS III`, fill=`NUTS III`))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
bar_NUTS
procedure_sum <- summary(asma$`Numero de Procedimentos`)
procedure_sum
hist_age <- hist(asma$`Idade (anos)`, breaks=90, right=F)
hist_procedure <- hist(asma$`Numero de Procedimentos`, breaks=50, right=F)
hist_procedure <- hist(asma$`Numero de Procedimentos`, breaks=50, right=F,
main="Histogram of number of procedures",
xlab="Number of procedures",
col="green")
hist_age <- hist(asma$`Idade (anos)`, breaks=90, right=F,
main="Histogram of participants age",
xlab="Age (years)",
col="#7dd67a")
#Quanti x Quanti
# No of procedures and intensive care days
plot(asma$`Numero de Procedimentos`, asma$`Dias de internamento`)
#Quanti x Quanti
# No of procedures and intensive care days
plot(asma$`Numero de Procedimentos`, asma$`Dias de internamento`,
main="Graphical representation of the correlation between hospitalization days and number of procedures",
xlab="Number of procedures",
ylab="Hospitalization days",
col="#d987e6")
#Quanti x Quanti
# No of procedures and intensive care days
plot(asma$`Numero de Procedimentos`, asma$`Dias de internamento`,
main="Graphical representation of the correlation between hospitalization days and number of procedures",
xlab="Number of procedures",
ylab="Hospitalization days",
col="#141d82")
# No of procedures and intensive care days
plot(asma$`Numero de Procedimentos`, asma$`Dias de internamento`,
main="Graphical representation of the correlation \nbetween hospitalization days and number of procedures",
xlab="Number of procedures",
ylab="Hospitalization days",
col="#141d82")
correlation <- cor.te
# No of procedures and intensive care days
plot(asma$`Numero de Procedimentos`, asma$`Dias de internamento`,
main="Graphical representation of the correlation \nbetween hospitalization days and number of procedures",
xlab="Number of procedures",
ylab="Hospitalization days",
col="#141d82")
#Quali x Quali --> Districts X Episode Type
cross_dist_epi <- xtabs(~asma$Distrito + asma$`Tipo Episodio`)
cross_dist_epi
correlation <- cor.test(asma$`Numero de Procedimentos`, asma$`Dias de internamento`)
correlation
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(foreign)
library(qqplotr)
library(car)
library(emmeans)
library(DescTools)
library(FSA)
library(PMCMRplus)
NL_BD <- BD %>%
subset(NUTS_II %in% c("Norte", "Área Metropolitana de Lisboa"))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(foreign)
library(qqplotr)
library(car)
library(emmeans)
library(DescTools)
library(FSA)
library(PMCMRplus)
```
BD <- read.spss("TPC_3_Caracterizacao_Concelhos_Saude.sav", to.data.frame = TRUE)
NL_BD <- BD %>%
subset(NUTS_II %in% c("Norte", "Área Metropolitana de Lisboa"))
NL_BD <- BD %>%
filter(NUTS_II == "Norte" && NUTS_II == "Área Metropolitana de Lisboa")
View(NL_BD)
NL_BD <- BD %>%
subset(NUTS_II == "Norte" && NUTS_II == "Área Metropolitana de Lisboa")
View(NL_BD)
NL_BD <- BD %>%
subset(NUTS_II == "Norte")
View(NL_BD)
NL_BD <- BD %>%
subset((NUTS_II == "Norte") && (NUTS_II == "Área Metropolitana de Lisboa"))
View(NL_BD)
NL_BD <- BD %>%
subset((NUTS_II == "Norte") & (NUTS_II == "Área Metropolitana de Lisboa"))
View(NL_BD)
NL_BD <- BD %>%
subset(NUTS_II == "Norte" & NUTS_II == "Área Metropolitana de Lisboa")
View(NL_BD)
NL_BD <- BD %>%
subset(NUTS_II == "Norte" & NUTS_II == "Área Metropolitana de Lisboa")
NL_BD <- BD %>%
subset(NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa")
NL_BD1 <- BD[BD$NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa"]
#Files
BD <- read.spss("TPC_3_Caracterizacao_Concelhos_Saude.sav", to.data.frame = TRUE)
NL_BD1 <- BD[BD$NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa"]
View(BD)
NL_BD1 <- BD[BD$NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa"]
#Files
BD <- read.spss("TPC_3_Caracterizacao_Concelhos_Saude.sav", to.data.frame = TRUE)
NL_BD1 <- BD[BD$NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa"]
#########Exercise 1
# Compare region Norte and Lisbon according to number of doctors
# So what we have here is a quantitative variable (number of doctors) and a categorical variable (NUTS), meaning I want a t-test for independent samples
NL_BD <- BD %>%
subset(NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa")
NL_BD1 <- BD[BD$NUTS_II== "Norte" | NUTS_II== "Área Metropolitana de Lisboa"]
#Files
BD <- read.spss("TPC_3_Caracterizacao_Concelhos_Saude.sav", to.data.frame = TRUE) %>%
rename(nuts = NUTS_II)
NL_BD1 <- BD[BD$nuts== "Norte" | nuts== "Área Metropolitana de Lisboa"]
#Files
BD <- read.spss("TPC_3_Caracterizacao_Concelhos_Saude.sav", to.data.frame = TRUE) %>%
rename(nuts = NUTS_II)
NL_BD1 <- BD[BD$nuts== "Norte" | nuts== "Área Metropolitana de Lisboa"]
#########Exercise 1
# Compare region Norte and Lisbon according to number of doctors
# So what we have here is a quantitative variable (number of doctors) and a categorical variable (NUTS), meaning I want a t-test for independent samples
NL_BD <- BD %>%
subset(NUTS_II == "Norte", | NUTS_II == "Área Metropolitana de Lisboa",)
#########Exercise 1
# Compare region Norte and Lisbon according to number of doctors
# So what we have here is a quantitative variable (number of doctors) and a categorical variable (NUTS), meaning I want a t-test for independent samples
NL_BD <- BD %>%
subset(NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa",)
NL_BD1 <- BD[BD$nuts== "Norte" | nuts== "Área Metropolitana de Lisboa",]
#Files
BD <- read.spss("TPC_3_Caracterizacao_Concelhos_Saude.sav", to.data.frame = TRUE)
library(tidyverse)
library(ggplot2)
library(foreign)
library(qqplotr)
library(car)
library(emmeans)
library(DescTools)
library(FSA)
library(PMCMRplus)
#Files
BD <- read.spss("TPC_3_Caracterizacao_Concelhos_Saude.sav", to.data.frame = TRUE)
BD[BD$NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa",]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(foreign)
library(qqplotr)
library(car)
library(emmeans)
library(DescTools)
library(FSA)
library(PMCMRplus)
NL_BD <- BD %>%
subset(NUTS_II == "Norte" | NUTS_II == "Área Metropolitana de Lisboa")
?subset
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("rlang")
install.packages("rlang")
